nameOverride: ""
fullnameOverride: ""

# StableStudio
stablestudio:
  enabled: false
  preset_name: ""
  replicaCount: 1

  args: [ ]

  image:
    repository: ghcr.io/neuro-inc/stablestudio
    pullPolicy: IfNotPresent
    tag: development
    imagePullSecrets: [ ]

  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []
  labels: {}

  podAnnotations: { }

  # Service
  service:
    port: 3000
  # Ingress
  ingress:
    clusterName: ""
    className: ""
    annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # nginx.ingress.kubernetes.io/backend-protocol: HTTP
    # nginx.ingress.kubernetes.io/proxy-body-size: 15m
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: sd-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

# Api component
api:
  enabled: true
  replicaCount: 1

  args: []
  env:
    HUGGING_FACE_HUB_TOKEN: ""
    COMMANDLINE_ARGS: ""
    HUGGINGFACE_HUB_CACHE: "/home/worker/app/huggingface-cache"

  image:
    repository: ghcr.io/neuro-inc/stable-diffusion-webui
    pullPolicy: IfNotPresent
    tag: development
    imagePullSecrets: []


  podAnnotations: {}

  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []
  labels: {}
  # - key: platform.neuromation.io/job
  #   operator: Exists
  #   effect: NoSchedule
  # - key: nvidia.com/gpu
  #   operator: Exists
  #   effect: NoSchedule
  preset_name: ""
  # Service
  service:
    port: 7860
  # Ingress
  ingress:
    enabled: false
    clusterName: ""
    className: ""
    annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # nginx.ingress.kubernetes.io/backend-protocol: HTTP
    # nginx.ingress.kubernetes.io/proxy-body-size: 15m
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: sd-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

priorityClassName: ""

# Model
model:
  # HF model name for example 768-v-ema.ckpt
  modelHFName: ""
  modelRevision: ""
  # space separated files for example 768-v-ema.ckpt
  modelFiles: ""

# Model download hook
modelDownload:
  initEnabled: true
  image:
    repository: huggingface/downloader
    tag: 0.17.3
    pullPolicy: IfNotPresent
  resources: {}

HFCacheVolume:
  enabled: true
  storage: 20Gi
  accessMode: ReadWriteOnce