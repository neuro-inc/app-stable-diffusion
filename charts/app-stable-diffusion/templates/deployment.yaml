{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- include "app.apoloPodLabels" . | nindent 8 }}
    spec:
      {{- with .Values.api.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.modelDownload.initEnabled }}
      initContainers:
        - name: download-model
          image: "{{ .Values.modelDownload.image.repository }}:{{ .Values.modelDownload.image.tag }}"
          volumeMounts:
            {{- if .Values.HFCacheVolume.enabled }}
            - name: huggingface-cache
              mountPath: /home/worker/app/huggingface-cache
            {{- end }}
          env:
          {{- range $k, $v := .Values.api.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          command: [ "huggingface-cli" ]
          args:
            - download
            - {{ .Values.model.modelHFName }}
            - --local-dir /home/worker/app/huggingface-cache/
            {{- if .Values.model.modelFiles }}
            - {{ .Values.model.modelFiles }}
            {{- end }}
      {{- end }}
      securityContext:
        fsGroup: 0
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 300
            httpGet:
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: 300
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.HFCacheVolume.enabled }}
            - name: huggingface-cache
              mountPath: /home/worker/app/huggingface-cache
            {{- end }}
          {{- if .Values.api.env }}
          env:
          {{- range $k, $v := .Values.api.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- end }}
          {{- with .Values.api.args -}}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
      {{- if .Values.HFCacheVolume.enabled }}
        - name: huggingface-cache
          persistentVolumeClaim:
            claimName: {{ include "app.fullname" . }}-cache
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}
